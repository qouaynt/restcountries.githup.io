{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport countryCard from \"../components/countries.vue\"; // import { ref } from \"vue\";\n// import env from \"@/env.js\";\n\nexport default {\n  name: \"HomeView\",\n  components: {\n    // eslint-disable-next-line vue/no-unused-components\n    countryCard\n  },\n\n  async mounted() {\n    fetch(\"https://restcountries.com/v3.1/all\").then(res => res.json()).then(response => {\n      this.countries = response;\n    }).catch(error => {\n      console.log(\"Looks like there was a problem: \\n\", error);\n    });\n  },\n\n  computed: {\n    // filterAllCountries: function () {\n    //   return this.filteredCountries(this.countries);\n    // },\n    // eslint-disable-next-line vue/return-in-computed-property\n    regions() {\n      let valRegion = [];\n\n      for (let c in this.countries) {\n        if (!valRegion.includes(this.countries[c].region)) valRegion.push(this.countries[c].region);\n      }\n\n      return valRegion;\n    },\n\n    // eslint-disable-next-line vue/return-in-computed-property\n    filteredCountries() {\n      let valRegion = this.countries.slice();\n\n      if (this.selectedRegion) {\n        for (var i = valRegion.length - 1; i >= 0; i--) {\n          if (valRegion[i].region != this.selectedRegion) valRegion.splice(i, 1);\n        }\n      }\n\n      if (valRegion.length > 0 && this.search) {\n        for (var g = valRegion.length - 1; g >= 0; i--) {\n          if (!valRegion[g].name.includes(this.search)) valRegion.splice(g, 1);\n        }\n      }\n    }\n\n  },\n  methods: {\n    selectRegion(region) {\n      this.selectedRegion = region;\n    } // filteredCountries() {\n    //   return this.countries.filter((country) =>\n    //     this.countries.length\n    //       ? Object.keys(this.countries[0]).some((key) =>\n    //           (\"\" + country[key]).toLowerCase().includes(this.search)\n    //         )\n    //       : true\n    //   );\n    // },\n    // filterRegionOceania() {\n    //   return this.countries.filter((country) =>\n    //     this.countries.length\n    //       ? Object.keys(this.countries[0]).some((key) =>\n    //           (\"\" + country[key]).toLowerCase().includes(\"oceania\")\n    //         )\n    //       : true\n    //   );\n    // },\n    // filterRegionEurope() {\n    //   return this.countries.filter((country) =>\n    //     this.countries.length\n    //       ? Object.keys(this.countries[0]).some((key) =>\n    //           (\"\" + country[key]).toLowerCase().includes(\"europe\")\n    //         )\n    //       : true\n    //   );\n    // },\n    // filterRegionAmerica() {\n    //   return this.countries.filter((country) =>\n    //     this.countries.length\n    //       ? Object.keys(this.countries[0]).some((key) =>\n    //           (\"\" + country[key]).toLowerCase().includes(\"america\")\n    //         )\n    //       : true\n    //   );\n    // },\n    // filterRegionAfrica() {\n    //   return this.countries.filter((country) =>\n    //     this.countries.length\n    //       ? Object.keys(this.countries[0]).some((key) =>\n    //           (\"\" + country[key]).toLowerCase().includes(\"africa\")\n    //         )\n    //       : true\n    //   );\n    // },\n\n\n  },\n\n  data() {\n    return {\n      countries: [],\n      search: null,\n      ulFilter: false,\n      selectedRegion: null\n    };\n  }\n\n};","map":{"version":3,"mappings":";AA0CA,OAAOA,WAAP,MAAwB,6BAAxB,C,CACA;AACA;;AAEA,eAAe;EACbC,IAAI,EAAE,UADO;EAGbC,UAAU,EAAE;IACV;IACAF;EAFU,CAHC;;EAQb,MAAMG,OAAN,GAAgB;IACdC,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,QAAD,IAAc;MAClB,KAAKC,SAAL,GAAiBD,QAAjB;IACD,CAJH,EAKGE,KALH,CAKUC,KAAD,IAAW;MAChBC,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDF,KAAlD;IACD,CAPH;EAQD,CAjBY;;EAmBbG,QAAQ,EAAE;IACR;IACA;IACA;IACA;IACAC,OAAO,GAAG;MACR,IAAIC,SAAQ,GAAI,EAAhB;;MACA,KAAK,IAAIC,CAAT,IAAc,KAAKR,SAAnB,EAA8B;QAC5B,IAAI,CAACO,SAAS,CAACE,QAAV,CAAmB,KAAKT,SAAL,CAAeQ,CAAf,EAAkBE,MAArC,CAAL,EACEH,SAAS,CAACI,IAAV,CAAe,KAAKX,SAAL,CAAeQ,CAAf,EAAkBE,MAAjC;MACJ;;MACA,OAAOH,SAAP;IACD,CAZO;;IAaR;IACAK,iBAAiB,GAAG;MAClB,IAAIL,SAAQ,GAAI,KAAKP,SAAL,CAAea,KAAf,EAAhB;;MAEA,IAAI,KAAKC,cAAT,EAAyB;QACvB,KAAK,IAAIC,IAAIR,SAAS,CAACS,MAAV,GAAmB,CAAhC,EAAmCD,KAAK,CAAxC,EAA2CA,CAAC,EAA5C,EAAgD;UAC9C,IAAIR,SAAS,CAACQ,CAAD,CAAT,CAAaL,MAAb,IAAuB,KAAKI,cAAhC,EACEP,SAAS,CAACU,MAAV,CAAiBF,CAAjB,EAAoB,CAApB;QACJ;MACF;;MAEA,IAAIR,SAAS,CAACS,MAAV,GAAmB,CAAnB,IAAwB,KAAKE,MAAjC,EAAyC;QACvC,KAAK,IAAIC,IAAIZ,SAAS,CAACS,MAAV,GAAmB,CAAhC,EAAmCG,KAAK,CAAxC,EAA2CJ,CAAC,EAA5C,EAAgD;UAC9C,IAAI,CAACR,SAAS,CAACY,CAAD,CAAT,CAAa3B,IAAb,CAAkBiB,QAAlB,CAA2B,KAAKS,MAAhC,CAAL,EAA8CX,SAAS,CAACU,MAAV,CAAiBE,CAAjB,EAAoB,CAApB;QAChD;MACF;IACD;;EA7BO,CAnBG;EAmDbC,OAAO,EAAE;IACPC,YAAY,CAACX,MAAD,EAAS;MACnB,KAAKI,cAAL,GAAsBJ,MAAtB;IACD,CAHM,CAIP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EAhDO,CAnDI;;EAsGbY,IAAI,GAAG;IACL,OAAO;MACLtB,SAAS,EAAE,EADN;MAELkB,MAAM,EAAE,IAFH;MAGLK,QAAQ,EAAE,KAHL;MAILT,cAAc,EAAE;IAJX,CAAP;EAMD;;AA7GY,CAAf","names":["countryCard","name","components","mounted","fetch","then","res","json","response","countries","catch","error","console","log","computed","regions","valRegion","c","includes","region","push","filteredCountries","slice","selectedRegion","i","length","splice","search","g","methods","selectRegion","data","ulFilter"],"sourceRoot":"","sources":["D:\\Challenges\\REST Countries API\\reast-countries-api\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"formDivSearch\">\n      <input v-model=\"search\" type=\"text\" placeholder=\"search for a country\" />\n      <div class=\"forFilter\">\n        <a class=\"aFilter\" @click=\"ulFilter = !ulFilter\"\n          >Filter By Region <ion-icon name=\"chevron-down-sharp\"></ion-icon\n        ></a>\n        <ul v-if=\"ulFilter\">\n          <li\n            v-for=\"region in regions\"\n            @click=\"selectRegion(region)\"\n            :key=\"region\"\n          >\n            <a>{{ region }}</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"contentCardsCountry\" style=\"display: flex; flex-wrap: wrap\">\n      <country-card\n        v-for=\"country in filteredCountries\"\n        :key=\"country.ccn3\"\n        :country=\"country.area\"\n        :common=\"country.name.common\"\n        :population=\"country.population\"\n        :region=\"country.region\"\n        :png=\"country.flags.png\"\n      ></country-card>\n    </div>\n  </div>\n</template>\n\n\n\n\n\n\n\n\n\n<script>\nimport countryCard from \"../components/countries.vue\";\n// import { ref } from \"vue\";\n// import env from \"@/env.js\";\n\nexport default {\n  name: \"HomeView\",\n\n  components: {\n    // eslint-disable-next-line vue/no-unused-components\n    countryCard,\n  },\n\n  async mounted() {\n    fetch(\"https://restcountries.com/v3.1/all\")\n      .then((res) => res.json())\n      .then((response) => {\n        this.countries = response;\n      })\n      .catch((error) => {\n        console.log(\"Looks like there was a problem: \\n\", error);\n      });\n  },\n\n  computed: {\n    // filterAllCountries: function () {\n    //   return this.filteredCountries(this.countries);\n    // },\n    // eslint-disable-next-line vue/return-in-computed-property\n    regions() {\n      let valRegion = [];\n      for (let c in this.countries) {\n        if (!valRegion.includes(this.countries[c].region))\n          valRegion.push(this.countries[c].region);\n      }\n      return valRegion;\n    },\n    // eslint-disable-next-line vue/return-in-computed-property\n    filteredCountries() {\n      let valRegion = this.countries.slice();\n\n      if (this.selectedRegion) {\n        for (var i = valRegion.length - 1; i >= 0; i--) {\n          if (valRegion[i].region != this.selectedRegion)\n            valRegion.splice(i, 1);\n        }\n      }\n\n      if (valRegion.length > 0 && this.search) {\n        for (var g = valRegion.length - 1; g >= 0; i--) {\n          if (!valRegion[g].name.includes(this.search)) valRegion.splice(g, 1);\n        }\n      }\n    },\n  },\n\n  methods: {\n    selectRegion(region) {\n      this.selectedRegion = region;\n    },\n    // filteredCountries() {\n    //   return this.countries.filter((country) =>\n    //     this.countries.length\n    //       ? Object.keys(this.countries[0]).some((key) =>\n    //           (\"\" + country[key]).toLowerCase().includes(this.search)\n    //         )\n    //       : true\n    //   );\n    // },\n    // filterRegionOceania() {\n    //   return this.countries.filter((country) =>\n    //     this.countries.length\n    //       ? Object.keys(this.countries[0]).some((key) =>\n    //           (\"\" + country[key]).toLowerCase().includes(\"oceania\")\n    //         )\n    //       : true\n    //   );\n    // },\n    // filterRegionEurope() {\n    //   return this.countries.filter((country) =>\n    //     this.countries.length\n    //       ? Object.keys(this.countries[0]).some((key) =>\n    //           (\"\" + country[key]).toLowerCase().includes(\"europe\")\n    //         )\n    //       : true\n    //   );\n    // },\n    // filterRegionAmerica() {\n    //   return this.countries.filter((country) =>\n    //     this.countries.length\n    //       ? Object.keys(this.countries[0]).some((key) =>\n    //           (\"\" + country[key]).toLowerCase().includes(\"america\")\n    //         )\n    //       : true\n    //   );\n    // },\n    // filterRegionAfrica() {\n    //   return this.countries.filter((country) =>\n    //     this.countries.length\n    //       ? Object.keys(this.countries[0]).some((key) =>\n    //           (\"\" + country[key]).toLowerCase().includes(\"africa\")\n    //         )\n    //       : true\n    //   );\n    // },\n  },\n\n  data() {\n    return {\n      countries: [],\n      search: null,\n      ulFilter: false,\n      selectedRegion: null,\n    };\n  },\n};\n</script>\n\n\n\n\n\n\n\n\n\n\n\n<style lang=\"scss\">\n.home {\n  height: 100%;\n  width: 100%;\n}\n\n.formDivSearch {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 30px 50px;\n  input {\n    padding: 12px;\n    border: none;\n    border-radius: 3px;\n    font-size: 0.8rem;\n    color: var(--Blue-text);\n    background-color: var(--elements);\n    outline: none;\n    appearance: none;\n  }\n  input:focus {\n    color: var(--Blue-text);\n  }\n\n  .forFilter {\n    position: relative;\n    .aFilter {\n      padding: 15px;\n      background-color: var(--elements);\n      font-size: 0.8rem;\n      border-radius: 3px;\n      color: var(--Blue-text);\n      cursor: pointer;\n      ion-icon {\n        padding-left: 15px;\n      }\n    }\n    ul {\n      display: flex;\n      position: absolute;\n      flex-direction: column;\n      justify-content: flex-start;\n      align-items: center;\n      left: 0px;\n      top: 40px;\n      background-color: var(--elements);\n      border-radius: 7px;\n      z-index: 10;\n      li {\n        list-style: none;\n        padding: 10px 55px;\n        cursor: pointer;\n        a {\n          text-decoration: none;\n          color: var(--Blue-text);\n          font-size: 0.8rem;\n        }\n      }\n    }\n  }\n\n  .contentCardsCountry {\n    display: flex;\n    flex-wrap: wrap;\n  }\n}\n\n@media (max-width: 500px) {\n  #app header {\n    font-size: 0.8rem;\n  }\n  .home .formDivSearch {\n    flex-direction: column;\n    gap: 40px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}